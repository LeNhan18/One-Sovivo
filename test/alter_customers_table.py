#!/usr/bin/env python3
"""
Script ƒë·ªÉ th√™m c·ªôt nft_token_id v√†o b·∫£ng customers
"""

from app import app, db
import pymysql

def add_nft_token_id_column():
    """Th√™m c·ªôt nft_token_id v√†o b·∫£ng customers"""
    with app.app_context():
        try:
            # Ki·ªÉm tra xem c·ªôt ƒë√£ t·ªìn t·∫°i ch∆∞a
            check_query = """
                SELECT COLUMN_NAME 
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = DATABASE() 
                AND TABLE_NAME = 'customers' 
                AND COLUMN_NAME = 'nft_token_id'
            """
            
            result = db.session.execute(db.text(check_query))
            exists = result.fetchone()
            
            if not exists:
                # Th√™m c·ªôt nft_token_id
                alter_query = """
                    ALTER TABLE customers 
                    ADD COLUMN nft_token_id INT NULL 
                    COMMENT 'ID c·ªßa NFT Passport tr√™n blockchain'
                """
                
                db.session.execute(db.text(alter_query))
                db.session.commit()
                print("‚úÖ ƒê√£ th√™m c·ªôt nft_token_id v√†o b·∫£ng customers")
            else:
                print("‚úÖ C·ªôt nft_token_id ƒë√£ t·ªìn t·∫°i trong b·∫£ng customers")
                
        except Exception as e:
            print(f"‚ùå L·ªói khi th√™m c·ªôt nft_token_id: {e}")
            db.session.rollback()

if __name__ == '__main__':
    print("üîß B·∫Øt ƒë·∫ßu alter b·∫£ng customers...")
    add_nft_token_id_column()
    print("üéâ Ho√†n th√†nh!")
