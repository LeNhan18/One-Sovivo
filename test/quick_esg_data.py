# -*- coding: utf-8 -*-
"""
ESG Quick Sample Data Insertion
Ch√®n nhanh d·ªØ li·ªáu m·∫´u ESG v√†o database
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from flask import Flask
from models.database import db
from sqlalchemy import text
from datetime import datetime
import random

def create_sample_data():
    """T·∫°o d·ªØ li·ªáu m·∫´u ESG"""
    
    # X√≥a d·ªØ li·ªáu c≈©
    with db.engine.connect() as conn:
        conn.execute(text('DELETE FROM esg_contributions'))
        conn.execute(text('DELETE FROM esg_programs'))
        conn.commit()
    
    # Ch√®n ch∆∞∆°ng tr√¨nh ESG m·∫´u
    programs_sql = '''
    INSERT INTO esg_programs (id, name, description, category, target_amount, current_amount, start_date, end_date, status, image_url) VALUES
    (1, 'Tr·ªìng R·ª´ng Vi·ªát Nam', 'Kh√¥i ph·ª•c r·ª´ng nguy√™n sinh v√† tr·ªìng m·ªõi 100,000 c√¢y xanh t·∫°i mi·ªÅn n√∫i ph√≠a B·∫Øc', 'environment', 150000.00, 45320.50, '2025-01-15', '2025-12-15', 'active', '/images/esg/vietnam-forest.jpg'),
    (2, 'L√†m S·∫°ch S√¥ng Mekong', 'D·ª± √°n l√†m s·∫°ch v√† b·∫£o v·ªá h·ªá sinh th√°i s√¥ng Mekong', 'environment', 200000.00, 78450.00, '2025-02-01', '2026-01-31', 'active', '/images/esg/mekong-river.jpg'),
    (3, 'NƒÉng L∆∞·ª£ng M·∫∑t Tr·ªùi N√¥ng Th√¥n', 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng ƒëi·ªán m·∫∑t tr·ªùi cho 500 h·ªô gia ƒë√¨nh v√πng s√¢u v√πng xa', 'environment', 300000.00, 125670.25, '2025-03-01', '2025-11-30', 'active', '/images/esg/solar-rural.jpg'),
    (4, 'H·ªçc B·ªïng Sinh Vi√™n V√πng Cao', 'Cung c·∫•p h·ªçc b·ªïng to√†n ph·∫ßn cho 200 sinh vi√™n d√¢n t·ªôc thi·ªÉu s·ªë', 'social', 120000.00, 87650.00, '2025-01-01', '2025-12-31', 'active', '/images/esg/scholarship.jpg'),
    (5, 'Trung T√¢m Y T·∫ø C·ªông ƒê·ªìng', 'X√¢y d·ª±ng trung t√¢m y t·∫ø c·ªông ƒë·ªìng t·∫°i c√°c x√£ ngh√®o', 'social', 250000.00, 165430.50, '2025-01-01', '2026-06-30', 'active', '/images/esg/healthcare.jpg'),
    (6, 'K·ªπ NƒÉng S·ªë Cho Ng∆∞·ªùi Cao Tu·ªïi', 'ƒê√†o t·∫°o k·ªπ nƒÉng s·ª≠ d·ª•ng smartphone cho ng∆∞·ªùi cao tu·ªïi', 'social', 45000.00, 32780.25, '2025-02-15', '2025-10-15', 'active', '/images/esg/digital-elderly.jpg'),
    (7, 'Minh B·∫°ch Doanh Nghi·ªáp', 'N√¢ng cao t√≠nh minh b·∫°ch trong qu·∫£n tr·ªã doanh nghi·ªáp', 'governance', 75000.00, 54320.75, '2025-01-01', '2025-12-31', 'active', '/images/esg/transparency.jpg'),
    (8, 'ƒê√†o T·∫°o ƒê·∫°o ƒê·ª©c Kinh Doanh', 'Kh√≥a ƒë√†o t·∫°o v·ªÅ ƒë·∫°o ƒë·ª©c kinh doanh cho 1000 doanh nghi·ªáp SME', 'governance', 100000.00, 67890.50, '2025-02-01', '2025-11-30', 'active', '/images/esg/business-ethics.jpg'),
    (9, 'B·∫£o V·ªá Quy·ªÅn Ng∆∞·ªùi Lao ƒê·ªông', 'Gi√°m s√°t v√† c·∫£i thi·ªán ƒëi·ªÅu ki·ªán lao ƒë·ªông t·∫°i c√°c khu c√¥ng nghi·ªáp', 'governance', 60000.00, 41250.25, '2025-01-15', '2025-12-15', 'active', '/images/esg/worker-rights.jpg'),
    (10, 'N∆∞·ªõc S·∫°ch Cho Tr·∫ª Em', 'ƒê√£ ho√†n th√†nh cung c·∫•p n∆∞·ªõc s·∫°ch cho 50 tr∆∞·ªùng ti·ªÉu h·ªçc', 'social', 80000.00, 80000.00, '2024-06-01', '2024-12-31', 'completed', '/images/esg/clean-water-complete.jpg')
    '''
    
    # Ch√®n contributions m·∫´u
    contributions_data = []
    user_ids = [1001, 1002, 1003, 1004, 1005]
    
    for i in range(50):  # 50 contributions m·∫´u
        program_id = random.randint(1, 9)  # Active programs only
        user_id = random.choice(user_ids)
        amount = round(random.uniform(100, 3000), 2)
        svt_amount = round(amount * 0.1, 2)
        tx_hash = f"0x{''.join(random.choices('0123456789abcdef', k=64))}"
        
        contributions_data.append(f"({program_id}, {user_id}, {amount}, {svt_amount}, '{tx_hash}', NOW(), 'completed', 'ƒê√≥ng g√≥p qua v√≠ SVT')")
    
    contributions_sql = f'''
    INSERT INTO esg_contributions (program_id, user_id, amount, svt_amount, transaction_hash, contribution_date, status, notes) VALUES
    {', '.join(contributions_data)}
    '''
    
    try:
        with db.engine.connect() as conn:
            # Ch√®n programs
            conn.execute(text(programs_sql))
            print("‚úÖ ƒê√£ ch√®n 10 ch∆∞∆°ng tr√¨nh ESG")
            
            # Ch√®n contributions
            conn.execute(text(contributions_sql))
            print("‚úÖ ƒê√£ ch√®n 50 kho·∫£n ƒë√≥ng g√≥p ESG")
            
            conn.commit()
            
            # Hi·ªÉn th·ªã th·ªëng k√™
            result = conn.execute(text('''
                SELECT 
                    category,
                    COUNT(*) as count,
                    SUM(current_amount) as total
                FROM esg_programs 
                WHERE status = 'active'
                GROUP BY category
            '''))
            
            print("\nüìä TH·ªêNG K√ä D·ªÆ LI·ªÜU ƒê√É T·∫†O:")
            print("-" * 40)
            for row in result:
                category_name = {
                    'environment': 'M√¥i tr∆∞·ªùng',
                    'social': 'X√£ h·ªôi',
                    'governance': 'Qu·∫£n tr·ªã'
                }.get(row[0], row[0])
                print(f"{category_name}: {row[1]} ch∆∞∆°ng tr√¨nh - {row[2]:,.0f} VND")
            
            total_contributions = conn.execute(text('SELECT COUNT(*) FROM esg_contributions')).scalar()
            total_amount = conn.execute(text('SELECT SUM(amount) FROM esg_contributions')).scalar()
            total_svt = conn.execute(text('SELECT SUM(svt_amount) FROM esg_contributions')).scalar()
            
            print(f"\nT·ªïng ƒë√≥ng g√≥p: {total_contributions} l·∫ßn")
            print(f"T·ªïng s·ªë ti·ªÅn: {total_amount:,.0f} VND")
            print(f"T·ªïng SVT th∆∞·ªüng: {total_svt:,.0f} SVT")
            
            print("\nüå± D·ªÆ LI·ªÜU ESG ƒê√É S·∫¥NG S√ÄNG!")
            
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        return False
    
    return True

if __name__ == "__main__":
    from config import Config
    
    app = Flask(__name__)
    app.config.from_object(Config)
    db.init_app(app)
    
    with app.app_context():
        create_sample_data()